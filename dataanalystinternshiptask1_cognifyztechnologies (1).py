# -*- coding: utf-8 -*-
"""DataAnalystInternshipTask1@CognifyzTechnologies.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16ghYzCk1VGQOGTg7mmfiLPbBlzpqb9vI

**# DATA ANALYSIS INTERNSHIP TASK 1**

**TASK**

1. Load the dataset into a pandas DataFrame
2. Display the first five rows of the dataset.
3. Count the number of rows and columns in the dataset.
4. Identify the unique cuisines available in the dataset.
5. Calculate the average cost for two people to dine at the restaurants.
6. Determine the highest and lowest average cost for two in the dataset.
7. Check if the dataset contains any missing values and handle them accordingly.
8. Create a bar plot to visualize the distribution of restaurant ratings.
9. Filter the dataset to display restaurants that offer table booking.
10. Sort the dataset based on the aggregate rating in descending order.

Importing Libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

"""Loading the Dataset"""

import io
import pandas as pd
from google.colab import files

uploaded = files.upload()

"""1. Load the dataset into a pandas DataFrame.


"""

df = pd.read_csv(io.BytesIO(uploaded.get('Task_1_data_analysis (1).csv')))

df

pd.pandas.set_option('Display.max_columns',None)
pd.pandas.set_option('Display.max_rows',None)

"""**Data Cleansing and Exploratory Data Analysis**

2. Display the first five rows of the dataset.
"""

# first five record of the dataset
df.head()

# last five record of the dataset
df.tail()

"""3. Count the number of rows and columns in the dataset."""

# shape of the dataset
df.shape

# No. of rows in the dataset is 9551 and No. of columns in the dataset is 21.

# features of the dataset
df.columns

df['Has Table booking'].value_counts()

df['Has Online delivery'].value_counts()

df['Rating text'].value_counts()

# information about the dataset
df.info()

df.dtypes

# summary  statistics of the dataset
df.describe()

# summary statistics of the categorical features
df.describe(include='object')

"""7. Check if the dataset contains any missing values and handle them accordingly.

**Missing value treatment**
"""

# check null values
df.isnull().sum()

df.dropna(inplace=True)

"""4. Identify the unique cuisines available in the dataset."""

unique_cuisines = df['Cuisines'].unique()
for cuisin in unique_cuisines:
  print(cuisin)

"""5. Calculate the average cost for two people to dine at the restaurants."""

averageCostForTwo = df['Price range'].mean()*2
print("Average cost for two people to dine at the restaurants is :", averageCostForTwo)

"""6. Determine the highest and lowest average cost for two in the dataset."""

print("Highest average cost for two  in the dataset is ",df['Average Cost for two'].min())
print("Lowest average cost for two in the dataset is ",df['Average Cost for two'].max())

"""8. Create a bar plot to visualize the distribution of restaurant ratings."""

ratingCount = df['Rating text'].value_counts()[:]
ratingCount.plot(kind='bar',figsize=(10,8),color=['violet','cyan','yellow','powderblue','lightsalmon','lime'])
plt.title("Bar Plot - Restaurant Ratings")
plt.xlabel("Rating Text")
plt.ylabel("No. of  Rating Text")
plt.show()

"""9. Filter the dataset to display restaurants that offer table booking."""

df['Restaurant Name'][df['Has Table booking']=="Yes"]

"""10. Sort the dataset based on the aggregate rating in descending order."""

#Sort the dataset based on the aggregate rating in descending order.
df.sort_values(by='Aggregate rating',ascending=False)